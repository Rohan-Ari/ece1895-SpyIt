const int button = 7;
const int flip_switch = 8;
const int dial = 9;
const int speaker = 10;
const int miroSD = 11;

int buttonState = 0;
int switchState = 0;
int dialState = 0;

int Error = False; 
int Play = False; 
int* simon_array = 0;

void setup() {
  pinMode(button, INPUT);
  pinMode(flip_switch, INPUT);
  pinMode(dial, INPUT);
  pinMode(speaker, OUTPUT);
  pinMode(miroSD, INPUT);
}

void loop() {
While(play == false) //use as separate function to detect if a user wants to play 
{ 
  buttonState = digitalRead(button);
  if (buttonState == HIGH){
    Play = True;
  } 
} 

  
  generateRandomArray() //generates the random number array

  For(int j=1; j<=15; j++) //Increments total simon says patterns 
  { 
    For(int i=j; i>=1; j--) //plays incrementing simon says patterns
    { 
    Switch(i) 

    case 1 //first mechanism (button)

    checkMech_button();

    

    case 2 //second mechanism (switch)

    checkMech_switch();

    

    case 3 //third mechanism (dial)

    checkMech_dial();

  
  
    If (Error == TRUE) 

    { 

      break; 

    } else{ 

      //Play correct choice sound 

    } 

  

  } 

  If (Error == TRUE) 

  { 

    break; 

  } else{ 

    //Play correct pattern audio sound 

  } 

  

  

  } 

  If (Error == TRUE) 

  { 

    //Play losing audio sound 

    }else{ 

    //Play winning audio sound 

  } 
  Error = false;
  Play = false;
} 



void generateRandomArray() {

  // Initialize random number generator
  randomSeed(analogRead(0));

  // Populate the array with random numbers between 1 and 3
  for (int i = 0; i < 15; ++i) {
    simon_aray[i] = random(1, 4); // Generate random number between 1 and 3
  }

}

void checkMech_button() {

  while(true) {}
    buttonState = digitalRead(button);
    if (buttonState == HIGH) {
      break;
    } else if(switchState == HIGH; dialState == HIGH;) {
      Error = true;
      break;
    }
  }
}

void checkMech_dial() {

  while(true) {}
    dialState = digitalRead(dial);
    if (dialState == HIGH) {
      break;
    } else if(buttonState == HIGH; switchState == HIGH;) {
      Error = true;
      break;
    }
  }
}

void checkMech_switch() {

  while(true) {}
    switchState = digitalRead(flip_switch);
    if (switchState == HIGH) {
      break;
    } else if(buttonState == HIGH; dialState == HIGH;) {
      Error = true;
      break;
    }
  }
}
